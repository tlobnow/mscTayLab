{"frames":[{"func":"readDNAStringSet(\"~/Documents/Github/mscTayLab/results/MyD88.similarity.fasta\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".read_XStringSet(filepath, format, nrec, skip, seek.first.rec, \n    use.names, \"DNA\", with.qualities)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"fasta.index(filepath, nrec = nrec, skip = skip, seek.first.rec = seek.first.rec, \n    seqtype = seqtype)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"open_input_files(filepath)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"lapply(filepath2, function(fp) {\n    filexp <- new_input_filexp(fp)\n    reg.finalizer(filexp, close_filexp, onexit = TRUE)\n    filexp ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"lapply(filepath2, function(fp) {\n    filexp <- new_input_filexp(fp)\n    reg.finalizer(filexp, close_filexp, onexit = TRUE)\n    filexp ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"FUN(X[[i]], ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"new_input_filexp(fp)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".Call2(\"new_input_filexp\", filepath, PACKAGE = \"XVector\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in .Call2(\"new_input_filexp\", filepath, PACKAGE = \"XVector\") : \n  cannot open file '/Users/finnlo/Documents/Github/mscTayLab/results/MyD88.similarity.fasta'\n"}